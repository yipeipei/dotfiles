#!/usr/bin/env python3
# Capture random bits

import sys
import os
import datetime
import re

def update_dir(dir):
    if not os.path.isdir(dir):
        # exit if dir not exits
        print(dir, 'not exists')
        sys.exit()
    else:
        # update git repo
        os.system('cd {} && git pull'.format(dir))

def ensure_file(filename, title):
    # new file for new month
    if not os.path.isfile(filename):
        with open(filename, 'w') as f:
            f.write('# {}\n'.format(title))

def write_link(filename, link):
    # For a naive object, the %z and %Z format codes are replaced by empty strings.
    DATE_TIME = os.popen('date +%Y-%m-%d\ %H:%M:%S\ %z').read().strip()
    lines = open(filename).readlines()
    with open(filename, 'w') as f:
        f.writelines(lines[:1])
        f.write('\n')
        f.write('{} {}\n'.format(link, DATE_TIME))
        f.write('\n')
        f.write('---\n')
        f.writelines(lines[1:])

def new_clip(link):
    RE_LINK = '\[.*\]\(.*\)'
    if re.search(RE_LINK, link):
        print('Link')
        DIR = os.path.dirname(os.environ['DOTFILES']) + '/clips'
        update_dir(DIR)

        MONTH = datetime.datetime.now().strftime('%Y-%m')
        FILENAME = os.path.join(DIR, MONTH) + '.md'
        ensure_file(FILENAME, MONTH)

        write_link(FILENAME, link)

        os.system('cd {} && git add {} && git commit -m "clip" && git diff HEAD^ HEAD'.format(DIR, FILENAME))
    else:
        print('Undefined')

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: clip '[title](url)'")
        sys.exit()

    new_clip(sys.argv[1])
