[core]
	excludesfile = ~/.gitignore_global
	autocrlf = input
	trustctime = false
[alias]
	# Shortcuts
	# https://git.wiki.kernel.org/index.php/Aliases#Shortcuts
	st = status
	ci = commit
	br = branch
	co = checkout
	df = diff
	dc = diff --cached
	lg = log -p
	who = shortlog -s --

	# Alias
	# https://git.wiki.kernel.org/index.php/Aliases#alias
	alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage: git alias <new alias> <original command>\" >&2 && exit 1' -"
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'

	# Pretty logs
	# https://git.wiki.kernel.org/index.php/Aliases#Getting_pretty_logs
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

	# Word diff
	# https://wiki.math.cmu.edu/iki/wiki/tips/20140301-git-latexdiff.html
	wdf = diff --ignore-all-space --color-words
	wdc = diff --ignore-all-space --color-words --cached

	# LaTeX diff (in cases wdf and wdc fail)
	# https://git-scm.com/docs/gitattributes#_customizing_word_diff
	ldf = diff --ignore-all-space --color-words="\\\\[a-zA-Z]+|[{}]|\\\\.|[^\\{}[:space:]]+"
	ldc = diff --ignore-all-space --color-words="\\\\[a-zA-Z]+|[{}]|\\\\.|[^\\{}[:space:]]+" --cached

	# https://stackoverflow.com/questions/3231759/how-can-i-visualize-per-character-differences-in-a-unified-diff-file
	cdf = diff --ignore-all-space --color-words="."
	cdc = diff --ignore-all-space --color-words="." --cached

	# gitignore.io
	# https://www.gitignore.io/docs
	ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"

	# GitHub Flow
	# http://haacked.com/archive/2014/07/28/github-flow-aliases/
	co = checkout
	ec = config --global -e
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	cob = checkout -b
	cm = !git add -A && git commit -m
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -u && git commit -m "WIP" 
	undo = reset HEAD~1 --mixed
	amend = commit -a --amend
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
	# http://haacked.com/archive/2015/06/29/git-migrate/
	migrate = "!f(){ CURRENT=$(git symbolic-ref --short HEAD); git checkout -b $1 && git branch --force $CURRENT ${3-'$CURRENT@{u}'} && git rebase --onto ${2-master} $CURRENT; }; f"

	# Misc
	pp = !git pull && git push
	sb = status -sb
	au = add -u
	cp = cherry-pick
	lo = log --oneline
	# https://git.wiki.kernel.org/index.php/Aliases#A_shortcut_for_seeing_the_fetched_commits
	lc = log ORIG_HEAD.. --stat --no-merges
	# https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
	unstage = reset HEAD --
	last = log -1 HEAD
	fm = config core.fileMode
	fmt = "!f() { git -c core.fileMode=true $*; }; f"
	fmf = "!f() { git -c core.fileMode=false $*; }; f"
[user]
	name = YI Peipei
	email = yipeipei@gmail.com
[push]
	default = simple
